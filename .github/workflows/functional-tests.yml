name: Functional Tests
on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  functional-tests:
    runs-on: ubuntu-latest
    name: Run Functional Tests
    env:
      TERM: xterm-256color
    permissions:
      checks: write
      pull-requests: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run functional tests with JUnit reporter
        run: npm run test:ci
        
      - name: Generate functional test report
        run: npm run report:functional
        
      - name: Upload functional test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: functional-test-results
          path: |
            results/functional/
            cypress/videos/functional/
            cypress/screenshots/functional/
          retention-days: 30
          
      - name: Upload JUnit Test Report
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: results/junit/
          
      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Cypress JUnit Report
          path: results/junit/*.xml
          reporter: java-junit
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const reportPath = 'results/functional/functional-report.html';
              if (fs.existsSync(reportPath)) {
                const reportContent = fs.readFileSync(reportPath, 'utf8');
                const summary = reportContent.match(/<title>(.*?)<\/title>/)?.[1] || 'Functional Test Report';
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## Functional Tests âœ…\n\n**Summary:** ${summary}\n\n[View Full Report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
                });
              }
            } catch (error) {
              console.log('Could not create comment:', error.message);
            } 